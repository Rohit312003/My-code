#include <bits/stdc++.h>
#include <string>
#include <math.h>
#include <string.h>
#include <sstream>
#include <iostream>
#include <vector>
using namespace std;
typedef long long int ll;
#define MOD 1000000007;
const int N = 1e5 + 10;
const int INF = 1e9 + 10;
vector<int> vis(N, 0);
int mdd = 1e9 + 7;
vector<int> dist(N, INF);
vector<pair<int, int>> g[N];
int poww(int x, int y)
{
    int a = 1;
    while (y--)
    {
        a *= x;
    }
    return a;
}
// in prefix sum indexing startfrom 1 based:)
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    ll t;
    cin >> t;
    while (t--)
    {

        ll n, q;
        cin >> n >> q;

        vector<ll> a(n + 1, 0);
        // optimization using prefixsum
        vector<ll> f(n + 1, 0);
        vector<ll> b(n + 2, 0);

        for (int i = 1; i <= n; i++)
        {
            cin >> a[i];
            f[i] = __gcd(f[i - 1], a[i]);
        }

        for (int i = n; i >= 1; i--)
        {
            b[i] = __gcd(b[i + 1], a[i]);
        }

        for (int i = 1; i <= q; i++)
        {
            ll l, r;
            cin >> l >> r;

            cout << __gcd(f[l - 1], b[r + 1]) << endl;
        }
    }
    return 0;
}
